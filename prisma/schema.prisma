// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(cuid())
  fullname        String
  email           String @unique
  phone           String
  password        String
  confirmPassword String
  land            Land[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Inquiry {
  id         String   @id @default(cuid())
  name       String
  phone      String
  email      String
  subject    String
  message    String
  receivedAt DateTime @default(now())
}

model ResetPassword {
  email String @unique

  pass_reset_token         BigInt
  pass_reset_token_expires BigInt
}

enum Purpose {
  RENT
  SALE
}

enum PropertyCategory {
  COMMERCIAL
  SEMICOMMERCIAL
  RESIDENTAL
}

enum PropertyFace {
  EAST
  WEST
  NORTH
  SOUTH
}

enum PriceLabel {
  PERMONTH
  PERYEAR
  PERANNA
  PERKATTHA
  PERROPHANI
  PERHAAT
  PERBIGHA
  TOTALPRICE
}

enum RoadType {
  BLACKTOPPED
  CONCRETE
  GRAVEL
  OFFROAD
  NOROAD
  ALLEY
  PAVED
}

enum AreaType {
  HAAT
  ROPANI
  ANNA
  KATTHA
  BIGGA
  SQUAREFEET
}

enum Negotiable {
  YES
  NO
}

enum Status {
  VERIFIED
  UNVERIFIED
  PENDING
}

model Land {
  id                  String           @id @default(cuid())
  propertyId          String?
  purpose             Purpose
  propertyCategory    PropertyCategory
  propertyFace        PropertyFace
  address             String
  landmark            String?
  roadType            RoadType?
  roadAccess          String?
  areaType            AreaType
  area                String
  price               Int
  priceLabel          PriceLabel
  negotiable          Negotiable
  propertyTitle       String
  propertyDescription String?
  ownerName           String
  contactNumber       String
  image               String
  status              Status

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}
